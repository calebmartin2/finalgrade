{"version":3,"sources":["CalcFunc.js","Calc.js","App.js","reportWebVitals.js","index.js"],"names":["CalcFunc","props","current","final","className","Math","round","custom","Number","EPSILON","gradeObjects","gradeLetter","grade10","grade7","color","Calc","console","log","pointScale","map","obj","index","style","backgroundColor","App","useState","setCurrent","setFinal","setPointScale","type","value","onChange","e","target","name","defaultChecked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAgBeA,MAdf,SAAkBC,GAChB,MAAsB,KAAlBA,EAAMC,SAAkC,KAAhBD,EAAME,MAE9B,qBAAIC,UAAU,aAAd,UACGC,KAAKC,MAG6C,MAF9CL,EAAMM,OAAS,IACfN,EAAMC,QAAU,KAAQ,EAAID,EAAME,MAAQ,OAC1CF,EAAME,MAAQ,KAAQ,IAAMK,OAAOC,UAAkB,IAJ5D,OAQK,oBAAIL,UAAU,YAAd,8BCZLM,EAAe,CACnB,CAAEC,YAAa,IAAKC,QAAS,GAAIC,OAAQ,GAAIC,MAAO,WACpD,CAAEH,YAAa,IAAKC,QAAS,GAAIC,OAAQ,GAAIC,MAAO,WACpD,CAAEH,YAAa,IAAKC,QAAS,GAAIC,OAAQ,GAAIC,MAAO,WACpD,CAAEH,YAAa,IAAKC,QAAS,GAAIC,OAAQ,GAAIC,MAAO,YAuBvCC,MApBf,SAAcd,GACZ,OACE,sBAAKG,UAAU,OAAf,UACGY,QAAQC,IAAIhB,EAAMiB,YACnB,uBACCR,EAAaS,KAAI,SAACC,EAAKC,GAAN,OAChB,gCACE,qBAAIjB,UAAU,cAAckB,MAAO,CAAEC,gBAAiBH,EAAIN,OAA1D,UACGM,EAAIT,YADP,IAC0C,OAArBV,EAAMiB,WAAsBE,EAAIR,QAAUQ,EAAIP,OADnE,QAGA,cAAC,EAAD,CACEN,OAA6B,OAArBN,EAAMiB,WAAsBE,EAAIR,QAAUQ,EAAIP,OACtDX,QAASD,EAAMC,QACfC,MAAOF,EAAME,UAPPkB,UCsBHG,MA/Bf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNvB,EADM,KACGwB,EADH,OAEaD,mBAAS,IAFtB,mBAENtB,EAFM,KAECwB,EAFD,OAGuBF,mBAAS,MAHhC,mBAGNP,EAHM,KAGMU,EAHN,KAIb,OACE,sBAAKxB,UAAU,MAAf,UACE,wDACA,uBAAMA,UAAU,YAAhB,UACE,oDACA,uBACEyB,KAAK,SACLC,MAAO5B,EACP6B,SAAU,SAACC,GAAD,OAAON,EAAWM,EAAEC,OAAOH,UAEvC,uBACA,mDACA,uBACED,KAAK,SACLC,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAOL,EAASK,EAAEC,OAAOH,UAErC,kDACA,uBACA,uBAAOD,KAAK,QAAQC,MAAM,KAAKI,KAAK,aAAaH,SAAU,SAACC,GAAD,OAAOJ,EAAcI,EAAEC,OAAOH,QAASK,gBAAc,IAhBlH,KAiBE,uBAAON,KAAK,QAAQC,MAAM,IAAII,KAAK,aAAaH,SAAU,SAACC,GAAD,OAAOJ,EAAcI,EAAEC,OAAOH,UAjB1F,OAmBA,cAAC,EAAD,CAAM5B,QAASA,EAASC,MAAOA,EAAOe,WAAYA,QCnBzCkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9f513e76.chunk.js","sourcesContent":["import './index.css'\r\n\r\nfunction CalcFunc(props) {\r\n  if (props.current !== \"\" && props.final !== \"\") {\r\n    return (\r\n      <h3 className='CalcOutput'>\r\n        {Math.round(\r\n          (((props.custom / 100 -\r\n            (props.current / 100) * (1 - props.final / 100)) /\r\n            (props.final / 100)) * 100 + Number.EPSILON) * 100) / 100}\r\n      %</h3>\r\n    );\r\n  } else {\r\n    return <h3 className='CalcError'>Input is blank.</h3>;\r\n  }\r\n}\r\nexport default CalcFunc;\r\n","import CalcFunc from \"./CalcFunc.js\";\r\nconst gradeObjects = [\r\n  { gradeLetter: \"A\", grade10: 90, grade7: 93, color: \"#2ce574\" },\r\n  { gradeLetter: \"B\", grade10: 80, grade7: 85, color: \"#cdf03a\" },\r\n  { gradeLetter: \"C\", grade10: 70, grade7: 75, color: \"#ffe500\" },\r\n  { gradeLetter: \"D\", grade10: 60, grade7: 67, color: \"#ff9600\" },\r\n];\r\n\r\nfunction Calc(props) {\r\n  return (\r\n    <div className=\"Calc\">\r\n      {console.log(props.pointScale)}\r\n      <br />\r\n      {gradeObjects.map((obj, index) => (\r\n        <div key={index}>\r\n          <h2 className=\"calc-header\" style={{ backgroundColor: obj.color }}>\r\n            {obj.gradeLetter} {props.pointScale === \"10\" ? obj.grade10 : obj.grade7}%:\r\n          </h2>\r\n          <CalcFunc\r\n            custom={props.pointScale === \"10\" ? obj.grade10 : obj.grade7}\r\n            current={props.current}\r\n            final={props.final}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Calc;\r\n","import \"./App.css\";\r\nimport Calc from \"./Calc.js\";\r\nimport React, { useState } from \"react\";\r\nimport './index.css'\r\n\r\nfunction App() {\r\n  const [current, setCurrent] = useState(90);\r\n  const [final, setFinal] = useState(20);\r\n  const [pointScale, setPointScale] = useState(\"10\");\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Final Grade Calculator</h1>\r\n      <form className=\"GradeForm\">\r\n        <label>Current Grade: </label>\r\n        <input\r\n          type=\"number\"\r\n          value={current}\r\n          onChange={(e) => setCurrent(e.target.value)}\r\n        />\r\n        <br/>\r\n        <label>Final Weight: </label>\r\n        <input\r\n          type=\"number\"\r\n          value={final}\r\n          onChange={(e) => setFinal(e.target.value)}\r\n        />\r\n        <label>Point Scale: </label>\r\n        <br/>\r\n        <input type=\"radio\" value=\"10\" name=\"pointScale\" onChange={(e) => setPointScale(e.target.value) } defaultChecked />10\r\n        <input type=\"radio\" value=\"7\" name=\"pointScale\" onChange={(e) => setPointScale(e.target.value)}/>7\r\n      </form>\r\n      <Calc current={current} final={final} pointScale={pointScale}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}